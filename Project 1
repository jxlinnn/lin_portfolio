import pandas as pd
import numpy as np
import scipy.stats as stats
import re

def nhl_correlation(): 
    # YOUR CODE HERE
    nhl_df=pd.read_csv("assets/nhl.csv")
    cities=pd.read_html("assets/wikipedia_data.html")[1]
    cities=cities.iloc[:-1,[0,3,5,6,7,8]]
    
    nhl_df = nhl_df[nhl_df['year']==2018]
    nhl_df['team'] = nhl_df['team'].str.extract(r'([A-Za-z\s.]*)')
    nhl_df.rename(columns = {'team':'NHL'}, inplace = True)
    nhl_df = nhl_df[nhl_df['NHL'].str.contains('Division') == False]
    nhl_df.set_index('NHL', inplace = True)

    cities = cities.drop(columns = ['NFL', 'MLB', 'NBA'])
    cities = cities.set_index('Metropolitan area')
    cities.rename(columns = {'Population (2016 est.)[8]':'Population'}, inplace = True)
    cities['NHL'] = cities['NHL'].str.extract(r'([A-Za-z\s]*)')
    cities = cities[cities['NHL']!= '']
    for city in cities.index:
        for team in nhl_df.index:
            if cities.loc[city]['NHL'] in team:
                cities.loc[city]['NHL'] = team
    cities.loc['New York City']['NHL'] = ('New Jersey Devils', 'New York Islanders', 'New York Rangers')
    cities.loc['Los Angeles']['NHL'] = ('Anaheim Ducks', 'Los Angeles Kings')
    cities = cities.explode('NHL')
    cities['W'] = None
    cities['L'] = None
    cities = cities.reset_index().set_index('NHL')
    nhl_df['W'] = pd.to_numeric(nhl_df['W'])
    nhl_df['L'] = pd.to_numeric(nhl_df['L'])
    for nhl in nhl_df.index:
        for team in cities.index:
            if nhl == team:
                cities.loc[team]['W'] = nhl_df.loc[nhl]['W']
                cities.loc[team]['L'] = nhl_df.loc[nhl]['L']
    cities = cities.reset_index().set_index('Metropolitan area')
    wl = pd.Series({}, index = cities.index)
    cities['win_loss'] = None
    for city, frame in cities.groupby(cities.index):
        wl[city] = (frame['W']/(frame['W']+frame['L'])).mean()
    cities['win_loss'] = wl
    cities = cities.groupby(cities.index).first()
    cities['Population'] = pd.to_numeric(cities['Population'])
    
    population_by_region = cities['Population'] # pass in metropolitan area population from cities
    win_loss_by_region = cities['win_loss'] # pass in win/loss ratio from nhl_df in the same order as cities["Metropolitan area"]

    assert len(population_by_region) == len(win_loss_by_region), "Q1: Your lists must be the same length"
    assert len(population_by_region) == 28, "Q1: There should be 28 teams being analysed for NHL"
    
    return (stats.pearsonr(population_by_region, win_loss_by_region)[0])
